/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warhammerplayersheet;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.RenderingHints;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListModel;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Rivs
 */
public class AddProfession extends javax.swing.JFrame {

    /**
     * Creates new form AddProfession
     */
    ArrayList skills, talents, equipment;
    ArrayList<Profession> professions;
    
    
    Equipment[] addedEq;
    DefaultListModel tempEq = new DefaultListModel<Equipment>();
    DefaultListModel tempAddedEq = new DefaultListModel<Equipment>();
    
    Skill[] addedSkills;
    DefaultListModel tempSkills = new DefaultListModel<Skill>();
    DefaultListModel tempAddedSkills = new DefaultListModel<Skill>();
    
    Talent[] addedTalents;
    DefaultListModel tempTalents = new DefaultListModel<Talent>();
    DefaultListModel tempAddedTalents = new DefaultListModel<Talent>();
    
    Profession[] addedEntries;    
    DefaultListModel tempAddedEntries = new DefaultListModel<Profession>();
    
    Profession[] addedExits;    
    DefaultListModel tempAddedExits = new DefaultListModel<Profession>();
    
    
    
    public AddProfession(ArrayList professions, ArrayList skills, ArrayList talents, ArrayList equipment) {
        initComponents();
        this.professions=professions;
        this.skills=skills;
        this.talents=talents;
        this.equipment=equipment;
        
        arrayToModel(tempSkills, skills);        
        jList1.setModel(tempSkills);
        jList2.setModel(tempAddedSkills);  
        
        arrayToModel(tempTalents, talents);        
        jList3.setModel(tempTalents);
        jList4.setModel(tempAddedTalents); 
        
        jList5.setModel(tempAddedEntries);
        jList6.setModel(tempAddedExits);
        
        //jList1.repaint();
        //System.out.println(jList1.getModel().getSize());
    }
    void arrayToModel(DefaultListModel model, ArrayList array)
    {
        for(int i=0; i<array.size() ; i++)
        {
            model.addElement(array.get(i));
        }
    }
    void arrayToModel(DefaultListModel model, Object[] array)
    {
        for(int i=0; i<array.length ; i++)
        {
            model.addElement(array[i]);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        wwfield = new javax.swing.JTextField();
        usfield = new javax.swing.JTextField();
        kfield = new javax.swing.JTextField();
        odpfield = new javax.swing.JTextField();
        ogdfield = new javax.swing.JTextField();
        zrfield = new javax.swing.JTextField();
        intfield = new javax.swing.JTextField();
        swfield = new javax.swing.JTextField();
        pofield = new javax.swing.JTextField();
        ppfield = new javax.swing.JTextField();
        szfield = new javax.swing.JTextField();
        magfield = new javax.swing.JTextField();
        afield = new javax.swing.JTextField();
        zywfield = new javax.swing.JTextField();
        sfield = new javax.swing.JTextField();
        wtfield = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField18 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList<>();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dodawanie profesji");
        setResizable(false);

        jTextField1.setToolTipText("Nazwa profesji");
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setToolTipText("Opis profesji");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextArea1FocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        wwfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        wwfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        wwfield.setToolTipText("Walka Wręcz");
        wwfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                wwfieldKeyReleased(evt);
            }
        });

        usfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        usfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usfield.setToolTipText("Umiejętności Strzeleckie");
        usfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usfieldKeyReleased(evt);
            }
        });

        kfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        kfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        kfield.setToolTipText("Krzepa");
        kfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kfieldKeyReleased(evt);
            }
        });

        odpfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        odpfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        odpfield.setToolTipText("Odporność");
        odpfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                odpfieldKeyReleased(evt);
            }
        });

        ogdfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        ogdfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ogdfield.setToolTipText("Ogłada");
        ogdfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ogdfieldKeyReleased(evt);
            }
        });

        zrfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        zrfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        zrfield.setToolTipText("Zręczność");
        zrfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                zrfieldKeyReleased(evt);
            }
        });

        intfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        intfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        intfield.setToolTipText("Inteligencja");
        intfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                intfieldKeyReleased(evt);
            }
        });

        swfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        swfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        swfield.setToolTipText("Siłą woli");
        swfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                swfieldKeyReleased(evt);
            }
        });

        pofield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        pofield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pofield.setToolTipText("Punkty Obłędu");
        pofield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pofieldKeyReleased(evt);
            }
        });

        ppfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        ppfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ppfield.setToolTipText("Punkty Przeznaczenia");
        ppfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ppfieldKeyReleased(evt);
            }
        });

        szfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        szfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        szfield.setToolTipText("Szybkość");
        szfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                szfieldKeyReleased(evt);
            }
        });

        magfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        magfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        magfield.setToolTipText("Magia");
        magfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                magfieldKeyReleased(evt);
            }
        });

        afield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        afield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        afield.setToolTipText("Ataki");
        afield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                afieldKeyReleased(evt);
            }
        });

        zywfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        zywfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        zywfield.setToolTipText("Żywotność");
        zywfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                zywfieldKeyReleased(evt);
            }
        });

        sfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        sfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sfield.setToolTipText("Siła");
        sfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sfieldKeyReleased(evt);
            }
        });

        wtfield.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        wtfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        wtfield.setToolTipText("Wytrzymałość");
        wtfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                wtfieldKeyReleased(evt);
            }
        });

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("");
        jScrollPane2.setViewportView(jList1);

        jButton1.setText("Dodaj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Usuń");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jList2);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Umiejętności");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton3.setText("Zapisz");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jList3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList3.setToolTipText("");
        jScrollPane4.setViewportView(jList3);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Zdolności");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton4.setText("Dodaj");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Usuń");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jList4.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(jList4);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Profesje wyjścia");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jCheckBox1.setText("Profesja zaawansowana");

        jTextField18.setToolTipText("Profesja wejścia");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Profesje wejścia");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTextField19.setToolTipText("Profesja wyjścia");

        jScrollPane6.setViewportView(jList5);

        jScrollPane7.setViewportView(jList6);

        jButton7.setText("+");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("+");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jTextField1)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(afield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zywfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(wtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(szfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(magfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pofield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ppfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(wwfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(kfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(odpfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zrfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(intfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(swfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ogdfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField18)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton7)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton4)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wwfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(odpfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zrfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(swfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ogdfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(afield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zywfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(szfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(magfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pofield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ppfield, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        listToList(jList1, jList2, tempAddedSkills, tempSkills);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        listToList(jList2, jList1, tempSkills, tempAddedSkills);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        for(int i=0 ; i<professions.size() ; i++)
        {                       
            if(jTextField1.getText().equals(professions.get(i).getName()))
            {
                System.out.println("Taka profesja istnieje");
                
                Object[] options = {"Tak", "Nie"};
                if(JOptionPane.showOptionDialog(this, "Taka profesja istnieje. Zastąpić?", "Profesja istnieje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null)==0)
                {                    
                    for(Profession pro : professions)
                    {
                        if(pro.getName().equals(jTextField1.getText()))
                        {
                            professions.remove(pro);
                            break;
                        }
                    }
                }
                else
                {
                    return;
                }                
            }
        }    
        
        if(jTextField1.getText().isEmpty() || jTextArea1.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Wypełnij wszystkie pola", "Błąd", JOptionPane.ERROR_MESSAGE);
            if(jTextField1.getText().equals("")){jTextField1.setBackground(Color.red);}
            if(jTextArea1.getText().equals("")){jTextArea1.setBackground(Color.red);}
        }
        else
        {        
            int ww  = Integer.parseInt(wwfield.getText().equals("")?"0":wwfield.getText());
            int us  = Integer.parseInt(usfield.getText().equals("")?"0":usfield.getText());
            int k   = Integer.parseInt(kfield.getText().equals("")?"0":kfield.getText());
            int odp = Integer.parseInt(odpfield.getText().equals("")?"0":odpfield.getText());
            int zr  = Integer.parseInt(zrfield.getText().equals("")?"0":zrfield.getText());
            int in  = Integer.parseInt(intfield.getText().equals("")?"0":intfield.getText());
            int sw  = Integer.parseInt(swfield.getText().equals("")?"0":swfield.getText());
            int ogd = Integer.parseInt(ogdfield.getText().equals("")?"0":ogdfield.getText());
            int a   = Integer.parseInt(afield.getText().equals("")?"0":afield.getText());
            int zyw = Integer.parseInt(zywfield.getText().equals("")?"0":zywfield.getText());
            int s   = Integer.parseInt(sfield.getText().equals("")?"0":sfield.getText());
            int wt  = Integer.parseInt(wtfield.getText().equals("")?"0":wtfield.getText());
            int sz  = Integer.parseInt(szfield.getText().equals("")?"0":szfield.getText());
            int mag = Integer.parseInt(magfield.getText().equals("")?"0":magfield.getText());
            int po  = Integer.parseInt(pofield.getText().equals("")?"0":pofield.getText());
            int pp  = Integer.parseInt(ppfield.getText().equals("")?"0":ppfield.getText());

            Stats tempstats = new Stats(ww,us,k,odp,zr,in,sw,ogd,a,zyw,s,wt,sz,mag,po,pp);

            saveLists();            

            professions.add(new Profession(jTextField1.getText(), jTextArea1.getText(), tempstats, 
                    addedSkills, 
                    addedTalents, 
                    addedEq, addedEntries, addedExits, jCheckBox1.isSelected()));

            professions.get(professions.size()-1).show();            
            if(jTextField1.isEnabled())
            {
                clearFields();
            }
            else
            {
                this.dispose();
                new BrowseProfession(professions, skills, talents, equipment).setVisible(true);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    void clearFields()
    {        
        new AddProfession(professions, skills, talents, equipment).setVisible(true);
        this.dispose();
    }
    void saveLists()
    {
        addedSkills = new Skill[tempAddedSkills.getSize()];
        for(int i=0; i<tempAddedSkills.getSize() ; i++)
        {
            addedSkills[i]=((Skill)tempAddedSkills.get(i));
        }
        addedTalents = new Talent[tempAddedTalents.getSize()];
        for(int i=0; i<tempAddedTalents.getSize() ; i++)
        {
            addedTalents[i]=((Talent)tempAddedTalents.get(i));
        } 
        addedEq = new Equipment[tempAddedEq.getSize()];
        for(int i=0; i<tempAddedEq.getSize() ; i++)
        {
            addedEq[i]=((Equipment)tempAddedEq.get(i));
        }      
        addedExits = new Profession[tempAddedExits.getSize()];
        for(int i=0; i<tempAddedExits.getSize() ; i++)
        {
            addedExits[i]=((Profession)tempAddedExits.get(i));
        }
        addedEntries = new Profession[tempAddedEntries.getSize()];
        for(int i=0; i<tempAddedEntries.getSize() ; i++)
        {
            addedEntries[i]=((Profession)tempAddedEntries.get(i));
        }
        addedExits = new Profession[tempAddedExits.getSize()];
        for(int i=0; i<tempAddedExits.getSize() ; i++)
        {
            addedExits[i]=((Profession)tempAddedExits.get(i));
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        listToList(jList3, jList4, tempAddedTalents, tempTalents);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        listToList(jList4, jList3, tempTalents, tempAddedTalents);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        fieldToList(tempAddedEntries, jTextField18);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        fieldToList(tempAddedExits, jTextField19);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost
//        if(jTextField1.getText().equals(""))
//        {
//            enableAll(false);
//            return;
//        }
//        
//        for(int i=0 ; i<professions.size() ; i++)
//        {
//            enableAll(true);            
//            if(jTextField1.getText().equals(professions.get(i).getName()))
//            {
//                System.out.println("Taka profesja istnieje");
//                
//                Object[] options = {"Oczywiście", "Naah"};
//                if(JOptionPane.showOptionDialog(this, "Taka profesja istnieje. Edytować?", "Profesja istnieje", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null)==0)
//                {
//                    loadProfession(jTextField1.getText());
//                }
//                else
//                {
//                    enableAll(false);
//                }
//                return;
//            }
//        }        
    }//GEN-LAST:event_jTextField1FocusLost

    private void wwfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wwfieldKeyReleased
        PlayerSheet.checkField(wwfield, evt);
    }//GEN-LAST:event_wwfieldKeyReleased

    private void usfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usfieldKeyReleased
        PlayerSheet.checkField(usfield, evt);
    }//GEN-LAST:event_usfieldKeyReleased

    private void kfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kfieldKeyReleased
        PlayerSheet.checkField(kfield, evt);    }//GEN-LAST:event_kfieldKeyReleased

    private void odpfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_odpfieldKeyReleased
       PlayerSheet.checkField(odpfield, evt);
    }//GEN-LAST:event_odpfieldKeyReleased

    private void zrfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zrfieldKeyReleased
        PlayerSheet.checkField(zrfield, evt);
    }//GEN-LAST:event_zrfieldKeyReleased

    private void intfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_intfieldKeyReleased
        PlayerSheet.checkField(intfield, evt);
    }//GEN-LAST:event_intfieldKeyReleased

    private void swfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_swfieldKeyReleased
        PlayerSheet.checkField(swfield, evt);
    }//GEN-LAST:event_swfieldKeyReleased

    private void ogdfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ogdfieldKeyReleased
        PlayerSheet.checkField(ogdfield, evt);
    }//GEN-LAST:event_ogdfieldKeyReleased

    private void afieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_afieldKeyReleased
        PlayerSheet.checkField(afield, evt);
    }//GEN-LAST:event_afieldKeyReleased

    private void zywfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zywfieldKeyReleased
        PlayerSheet.checkField(zywfield, evt);
    }//GEN-LAST:event_zywfieldKeyReleased

    private void sfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfieldKeyReleased
        PlayerSheet.checkField(sfield, evt);
    }//GEN-LAST:event_sfieldKeyReleased

    private void wtfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wtfieldKeyReleased
        PlayerSheet.checkField(wtfield, evt);
    }//GEN-LAST:event_wtfieldKeyReleased

    private void szfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_szfieldKeyReleased
        PlayerSheet.checkField(szfield, evt);
    }//GEN-LAST:event_szfieldKeyReleased

    private void magfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_magfieldKeyReleased
        PlayerSheet.checkField(magfield, evt);
    }//GEN-LAST:event_magfieldKeyReleased

    private void pofieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pofieldKeyReleased
        PlayerSheet.checkField(pofield, evt);
    }//GEN-LAST:event_pofieldKeyReleased

    private void ppfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ppfieldKeyReleased
        PlayerSheet.checkField(ppfield, evt);
    }//GEN-LAST:event_ppfieldKeyReleased

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyChar()==KeyEvent.VK_ENTER)
        {
            jTextField1FocusLost(null);
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextArea1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea1FocusGained
        jTextArea1.setBackground(null);
    }//GEN-LAST:event_jTextArea1FocusGained

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        jTextField1.setBackground(null);
    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    void enableAll(boolean bool)
    {
        jTextArea1.setEnabled(bool);
        wwfield.setEnabled(bool);
        usfield.setEnabled(bool);
        kfield.setEnabled(bool);
        odpfield.setEnabled(bool);
        ogdfield.setEnabled(bool);
        zrfield.setEnabled(bool);
        intfield.setEnabled(bool);
        swfield.setEnabled(bool);
        pofield.setEnabled(bool);
        ppfield.setEnabled(bool);
        szfield.setEnabled(bool);
        magfield.setEnabled(bool);
        afield.setEnabled(bool);
        zywfield.setEnabled(bool);
        sfield.setEnabled(bool);
        wtfield.setEnabled(bool);
        jTextField18.setEnabled(bool);
        jTextField19.setEnabled(bool);
        jCheckBox1.setEnabled(bool);
        jList1.setEnabled(bool);
        jList2.setEnabled(bool);
        jList3.setEnabled(bool);
        jList4.setEnabled(bool);
        jList5.setEnabled(bool);
        jList6.setEnabled(bool);        
        jButton1.setEnabled(bool);
        jButton2.setEnabled(bool);
        jButton3.setEnabled(bool);
        jButton4.setEnabled(bool);
        jButton5.setEnabled(bool);
        jButton7.setEnabled(bool);
        jButton8.setEnabled(bool);  
    }
    void loadProfession(String name)
    {
        for(int i=0 ; i<professions.size() ; i++)
        {
            if(name.equals(professions.get(i).getName()))
            {
                Profession temp = professions.get(i);
                
                jTextField1.setText(name);
                jTextArea1.setText(temp.getDescription());
                jCheckBox1.setSelected(temp.isAdvanced());
                wwfield.setText  (temp.getStats().getWW()==0?"":""+temp.getStats().getWW());
                usfield.setText  (temp.getStats().getUS()==0?"":""+temp.getStats().getUS());
                kfield.setText   (temp.getStats().getK()==0?"":""+temp.getStats().getK());
                odpfield.setText (temp.getStats().getODP()==0?"":""+temp.getStats().getODP());
                ogdfield.setText (temp.getStats().getOGD()==0?"":""+temp.getStats().getOGD());
                zrfield.setText  (temp.getStats().getZR()==0?"":""+temp.getStats().getZR());
                intfield.setText (temp.getStats().getINT()==0?"":""+temp.getStats().getINT());
                swfield.setText  (temp.getStats().getSW()==0?"":""+temp.getStats().getSW());
                pofield.setText  (temp.getStats().getPO()==0?"":""+temp.getStats().getPO());
                ppfield.setText  (temp.getStats().getPP()==0?"":""+temp.getStats().getPP());
                szfield.setText  (temp.getStats().getSZ()==0?"":""+temp.getStats().getSZ());
                magfield.setText (temp.getStats().getMAG()==0?"":""+temp.getStats().getMAG());
                afield.setText   (temp.getStats().getA()==0?"":""+temp.getStats().getA());
                zywfield.setText (temp.getStats().getZYW()==0?"":""+temp.getStats().getZYW());
                sfield.setText   (temp.getStats().getS()==0?"":""+temp.getStats().getS());
                wtfield.setText  (temp.getStats().getWT()==0?"":""+temp.getStats().getWT());
                
                                
                arrayToModel(tempAddedSkills, temp.getSkills());
                arrayToModel(tempAddedTalents, temp.getTalents());
                arrayToModel(tempAddedEntries, temp.getEntries());
                arrayToModel(tempAddedExits, temp.getExits());
                
                for(i=0 ; i<tempAddedSkills.toArray().length ; i++)
                {
                    tempSkills.removeElement(tempAddedSkills.toArray()[i]);
                }
                for(i=0 ; i<tempAddedTalents.toArray().length ; i++)
                {
                    tempTalents.removeElement(tempAddedTalents.toArray()[i]);
                }                
                
                return;
            }            
        }
        JOptionPane.showMessageDialog(this, "Nie można wczytać", "Błąd", JOptionPane.ERROR_MESSAGE);
    }
    void fieldToList(DefaultListModel<Profession> targetList, JTextField text)
    {   
        for(int i=0 ; i<targetList.getSize() ; i++)
        {            
            if(targetList.getElementAt(i).getName().equals(text.getText()))
            {
                JOptionPane.showMessageDialog(this, "Taka profesja jest już dodana", "Błąd", JOptionPane.ERROR_MESSAGE);
                text.setText("");
                return;
            }
        }        
        for(int i=0 ; i<professions.size() ; i++)
        {
            if(professions.get(i).getName().equals(text.getText()))
            {
                targetList.addElement(professions.get(i));
                text.setText("");
                return;
            }            
        }
        Object[] options = {"Oui", "Non"};        
        if(JOptionPane.showOptionDialog(null, "Brak profesji w bazie. Utworzyć?", "Nie znaleziono profesji", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null)==0)
        {
            Profession tempProf = new Profession(text.getText());
            professions.add(tempProf);
            targetList.addElement(tempProf);
        }
        text.setText("");
    }
    void listToList(JList<String> jl1, JList<String> jl2, DefaultListModel targetList, DefaultListModel initialList )
    {
        int index;
        try
        {
        index = jl1.getSelectedIndex();        
        targetList.addElement(initialList.get(index));
        }catch(ArrayIndexOutOfBoundsException e)
        {
            System.out.println("Brakło skilli.");
            return;
        }
        initialList.remove(index);        
    }
    void modelToArray(DefaultListModel model, ArrayList array)
    {
        for(int i=0; i<model.getSize() ; i++)
        {
            array.add(model.get(i));
        }            
    }
    javax.swing.JTextField getjTextField1()
    {
        return jTextField1;
    }
    
    /**
     * @param args the command line arguments
     */    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField afield;
    private javax.swing.JTextField intfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JList<String> jList6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField kfield;
    private javax.swing.JTextField magfield;
    private javax.swing.JTextField odpfield;
    private javax.swing.JTextField ogdfield;
    private javax.swing.JTextField pofield;
    private javax.swing.JTextField ppfield;
    private javax.swing.JTextField sfield;
    private javax.swing.JTextField swfield;
    private javax.swing.JTextField szfield;
    private javax.swing.JTextField usfield;
    private javax.swing.JTextField wtfield;
    private javax.swing.JTextField wwfield;
    private javax.swing.JTextField zrfield;
    private javax.swing.JTextField zywfield;
    // End of variables declaration//GEN-END:variables
}
