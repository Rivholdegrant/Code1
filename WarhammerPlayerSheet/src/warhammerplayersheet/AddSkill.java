/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warhammerplayersheet;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextPane;

/**
 *
 * @author Rivs
 */
public class AddSkill extends javax.swing.JFrame {

    /**
     * Creates new form AddSkill
     */
    ArrayList<Skill> skills;
    public AddSkill(ArrayList skills) {
        initComponents();
        this.skills=skills;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dodawanie umiejętności");
        setResizable(false);

        jTextField1.setToolTipText("Nazwa");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setToolTipText("Opis");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Krzepa", "Odporność", "Zręczność", "Inteligencja", "Siła Woli", "Ogłada", "Różne" }));
        jComboBox1.setToolTipText("Cecha");

        jButton1.setText("Zapisz");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setToolTipText("Zaawansowana");
        jCheckBox1.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextField1.setBackground(null);
        jTextArea1.setBackground(null);
        if(jTextField1.getText().isEmpty() || jTextArea1.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Wypełnij wszystkie pola", "Błąd", JOptionPane.ERROR_MESSAGE);
            if(jTextField1.getText().equals("")){jTextField1.setBackground(Color.red);}
            if(jTextArea1.getText().equals("")){jTextArea1.setBackground(Color.red);}
        }
        else
        {
            String tname, tdesc, tstat, tadvanced, message;
                       
            tname=jTextField1.getText().toUpperCase();
            tstat=jComboBox1.getSelectedItem().toString().toUpperCase();
            tdesc=jTextArea1.getText();  
            tadvanced = jCheckBox1.isSelected() ? "Zaawansowana":"Podstawowa";
                        
            for(Skill sk : skills)
            {
                if(sk.toString().equals(tname))
                {
                    System.out.println("GÓWNO! Już taki jest!");
                    JOptionPane.showMessageDialog(this, "Umiejętność o takiej nazwie już istnieje", "Błąd dodawania umiejętności", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
            skills.add(new Skill(tname, tstat, tdesc, jCheckBox1.isSelected()));
            message = 
                    String.format("%-6s %s %n","Nazwa:", tname) + 
                    String.format("%-6s %s %n","Typ:", tadvanced) +
                    String.format("%-6s %s %n","Cecha:", tstat) +
                    String.format("%-6s %s","Opis:", tdesc);            
            JTextPane jt = new JTextPane();
            jt.setText(message);            
            jt.setPreferredSize(new Dimension(140, 220));
            jt.setOpaque(true);
            jt.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 14));
            jt.setEditable(false);
            jt.setBackground(null);
            jt.setAutoscrolls(true);
            
            JOptionPane.showMessageDialog(this, jt, "Dodano umiejętność", JOptionPane.PLAIN_MESSAGE);
            this.dispose();
            new AddSkill(skills).setVisible(true);
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
